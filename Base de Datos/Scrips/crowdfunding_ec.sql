-- MySQL Script generated by MySQL Workbench
-- Wed Jan 22 23:23:46 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema crowdfunding_ec
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `crowdfunding_ec` ;

-- -----------------------------------------------------
-- Schema crowdfunding_ec
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `crowdfunding_ec` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `crowdfunding_ec` ;

-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`categorias`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`categorias` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`categorias` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NOT NULL,
  `descripcion` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nombre` (`nombre` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`roles` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(50) NOT NULL,
  `descripcion` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nombre` (`nombre` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`usuarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`usuarios` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`usuarios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombres` VARCHAR(60) NOT NULL,
  `apellido` VARCHAR(60) NOT NULL,
  `cedula` VARCHAR(10) NOT NULL,
  `email` VARCHAR(60) NOT NULL,
  `contrase√±a` VARCHAR(100) NOT NULL,
  `verificado` TINYINT(1) NULL DEFAULT '0',
  `fecha_nacimiento` DATE NULL,
  `fecha_registro` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `fecha_verificacion` DATETIME NULL DEFAULT NULL,
  `fotografia` MEDIUMBLOB NULL,
  `usuarioscol` VARCHAR(45) NULL,
  `estado` ENUM('Activo', 'Inactivo') NULL,
  `roles_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `cedula` (`cedula` ASC) VISIBLE,
  UNIQUE INDEX `email` (`email` ASC) VISIBLE,
  INDEX `fk_usuarios_roles1_idx` (`roles_id` ASC) VISIBLE,
  CONSTRAINT `fk_usuarios_roles1`
    FOREIGN KEY (`roles_id`)
    REFERENCES `crowdfunding_ec`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`tipos_crowdfunding`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`tipos_crowdfunding` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`tipos_crowdfunding` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(50) NOT NULL,
  `descripcion` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nombre` (`nombre` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`proyectos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`proyectos` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`proyectos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(150) NOT NULL,
  `descripcion` TEXT NOT NULL,
  `meta_financiera` DECIMAL(15,2) NOT NULL,
  `fecha_inicio` DATETIME NOT NULL,
  `fecha_fin` DATETIME NOT NULL,
  `estado` ENUM('Activo', 'Exitoso', 'Fallido', 'Cancelado') NULL DEFAULT 'Activo',
  `usuario_id` INT NOT NULL,
  `categoria_id` INT NULL DEFAULT NULL,
  `tipo_crowdfunding_id` INT NOT NULL,
  `verificado` TINYINT(1) NULL DEFAULT '0',
  `fecha_verificacion` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `usuario_id` (`usuario_id` ASC) VISIBLE,
  INDEX `idx_proyecto_tipo` (`tipo_crowdfunding_id` ASC) VISIBLE,
  INDEX `idx_proyecto_categoria` (`categoria_id` ASC) VISIBLE,
  CONSTRAINT `proyectos_ibfk_1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `crowdfunding_ec`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `proyectos_ibfk_2`
    FOREIGN KEY (`categoria_id`)
    REFERENCES `crowdfunding_ec`.`categorias` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `proyectos_ibfk_3`
    FOREIGN KEY (`tipo_crowdfunding_id`)
    REFERENCES `crowdfunding_ec`.`tipos_crowdfunding` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`comentarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`comentarios` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`comentarios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `proyecto_id` INT NOT NULL,
  `usuario_id` INT NOT NULL,
  `comentario` TEXT NOT NULL,
  `fecha_comentario` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `usuario_id` (`usuario_id` ASC) VISIBLE,
  INDEX `idx_comentarios_proyecto` (`proyecto_id` ASC) VISIBLE,
  CONSTRAINT `comentarios_ibfk_1`
    FOREIGN KEY (`proyecto_id`)
    REFERENCES `crowdfunding_ec`.`proyectos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `comentarios_ibfk_2`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `crowdfunding_ec`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`configuraciones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`configuraciones` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`configuraciones` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `clave` VARCHAR(100) NOT NULL,
  `valor` VARCHAR(255) NOT NULL,
  `descripcion` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `clave` (`clave` ASC) VISIBLE,
  INDEX `idx_configuraciones_clave` (`clave` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`donaciones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`donaciones` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`donaciones` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `proyecto_id` INT NOT NULL,
  `usuario_id` INT NOT NULL,
  `monto` DECIMAL(15,2) NOT NULL,
  `fecha_donacion` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `usuario_id` (`usuario_id` ASC) VISIBLE,
  INDEX `idx_donacion_proyecto` (`proyecto_id` ASC) VISIBLE,
  CONSTRAINT `donaciones_ibfk_1`
    FOREIGN KEY (`proyecto_id`)
    REFERENCES `crowdfunding_ec`.`proyectos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `donaciones_ibfk_2`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `crowdfunding_ec`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`inversiones_equity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`inversiones_equity` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`inversiones_equity` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `proyecto_id` INT NOT NULL,
  `usuario_id` INT NOT NULL,
  `monto_invertido` DECIMAL(15,2) NOT NULL,
  `porcentaje_acciones` DECIMAL(5,2) NOT NULL,
  `fecha_inversion` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `usuario_id` (`usuario_id` ASC) VISIBLE,
  INDEX `idx_inversion_equity_proyecto` (`proyecto_id` ASC) VISIBLE,
  CONSTRAINT `inversiones_equity_ibfk_1`
    FOREIGN KEY (`proyecto_id`)
    REFERENCES `crowdfunding_ec`.`proyectos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `inversiones_equity_ibfk_2`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `crowdfunding_ec`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`participaciones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`participaciones` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`participaciones` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `proyecto_id` INT NOT NULL,
  `usuario_id` INT NOT NULL,
  `porcentaje` DECIMAL(5,2) NOT NULL,
  `fecha_asignacion` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `proyecto_id` (`proyecto_id` ASC) VISIBLE,
  INDEX `usuario_id` (`usuario_id` ASC) VISIBLE,
  CONSTRAINT `participaciones_ibfk_1`
    FOREIGN KEY (`proyecto_id`)
    REFERENCES `crowdfunding_ec`.`proyectos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `participaciones_ibfk_2`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `crowdfunding_ec`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`prestamos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`prestamos` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`prestamos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `proyecto_id` INT NOT NULL,
  `usuario_id` INT NOT NULL,
  `monto_prestado` DECIMAL(15,2) NOT NULL,
  `tasa_interes` DECIMAL(5,2) NOT NULL,
  `fecha_prestamo` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `fecha_vencimiento` DATETIME NOT NULL,
  `estado` ENUM('Activo', 'Pagado', 'Default') NULL DEFAULT 'Activo',
  PRIMARY KEY (`id`),
  INDEX `usuario_id` (`usuario_id` ASC) VISIBLE,
  INDEX `idx_prestamo_proyecto` (`proyecto_id` ASC) VISIBLE,
  CONSTRAINT `prestamos_ibfk_1`
    FOREIGN KEY (`proyecto_id`)
    REFERENCES `crowdfunding_ec`.`proyectos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `prestamos_ibfk_2`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `crowdfunding_ec`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`recompensas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`recompensas` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`recompensas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `proyecto_id` INT NOT NULL,
  `descripcion` VARCHAR(255) NOT NULL,
  `monto_minimo` DECIMAL(15,2) NOT NULL,
  `cantidad_disponible` INT NULL DEFAULT NULL,
  `fecha_creacion` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `idx_recompensa_proyecto` (`proyecto_id` ASC) VISIBLE,
  CONSTRAINT `recompensas_ibfk_1`
    FOREIGN KEY (`proyecto_id`)
    REFERENCES `crowdfunding_ec`.`proyectos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`transacciones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`transacciones` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`transacciones` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `proyecto_id` INT NOT NULL,
  `usuario_id` INT NOT NULL,
  `tipo_transaccion` ENUM('Patrocinio', 'Donaci√≥n', 'Pr√©stamo', 'Inversi√≥n') NOT NULL,
  `monto` DECIMAL(15,2) NOT NULL,
  `fecha_transaccion` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `estado` ENUM('Pendiente', 'Completada', 'Fallida') NULL DEFAULT 'Pendiente',
  PRIMARY KEY (`id`),
  INDEX `idx_transaccion_usuario` (`usuario_id` ASC) VISIBLE,
  INDEX `idx_transaccion_proyecto` (`proyecto_id` ASC) VISIBLE,
  CONSTRAINT `transacciones_ibfk_1`
    FOREIGN KEY (`proyecto_id`)
    REFERENCES `crowdfunding_ec`.`proyectos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `transacciones_ibfk_2`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `crowdfunding_ec`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`transacciones_recompensas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`transacciones_recompensas` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`transacciones_recompensas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `transaccion_id` INT NOT NULL,
  `recompensa_id` INT NOT NULL,
  `cantidad` INT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  INDEX `idx_transacciones_recompensas_transaccion` (`transaccion_id` ASC) VISIBLE,
  INDEX `idx_transacciones_recompensas_recompensa` (`recompensa_id` ASC) VISIBLE,
  CONSTRAINT `transacciones_recompensas_ibfk_1`
    FOREIGN KEY (`transaccion_id`)
    REFERENCES `crowdfunding_ec`.`transacciones` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `transacciones_recompensas_ibfk_2`
    FOREIGN KEY (`recompensa_id`)
    REFERENCES `crowdfunding_ec`.`recompensas` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`verificaciones_proyectos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`verificaciones_proyectos` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`verificaciones_proyectos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `proyecto_id` INT NOT NULL,
  `tipo_verificacion` ENUM('Legitimidad', 'Legal', 'Objetivos') NOT NULL,
  `estado` ENUM('Pendiente', 'Aprobada', 'Rechazada') NULL DEFAULT 'Pendiente',
  `fecha_solicitud` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `fecha_verificacion` DATETIME NULL DEFAULT NULL,
  `documento_ruta` VARCHAR(255) NULL DEFAULT NULL,
  `comentarios` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_verificaciones_proyectos_estado` (`estado` ASC) VISIBLE,
  INDEX `idx_verificaciones_proyectos_proyecto` (`proyecto_id` ASC) VISIBLE,
  CONSTRAINT `verificaciones_proyectos_ibfk_1`
    FOREIGN KEY (`proyecto_id`)
    REFERENCES `crowdfunding_ec`.`proyectos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`verificaciones_usuarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`verificaciones_usuarios` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`verificaciones_usuarios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT NOT NULL,
  `tipo_verificacion` ENUM('Identidad', 'Financiera', 'Credibilidad') NOT NULL,
  `estado` ENUM('Pendiente', 'Aprobada', 'Rechazada') NULL DEFAULT 'Pendiente',
  `fecha_solicitud` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `fecha_verificacion` DATETIME NULL DEFAULT NULL,
  `documento_ruta` VARCHAR(255) NULL DEFAULT NULL,
  `comentarios` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_verificaciones_usuarios_estado` (`estado` ASC) VISIBLE,
  INDEX `idx_verificaciones_usuarios_usuario` (`usuario_id` ASC) VISIBLE,
  CONSTRAINT `verificaciones_usuarios_ibfk_1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `crowdfunding_ec`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`informacion_contacto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`informacion_contacto` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`informacion_contacto` (
  `idinformacion_Contacto` INT NOT NULL AUTO_INCREMENT,
  `telefono` VARCHAR(13) NOT NULL,
  `provincia` VARCHAR(40) NOT NULL,
  `cuidad` VARCHAR(40) NOT NULL,
  `callePrincipal` VARCHAR(60) NULL,
  `calleSecundaria` VARCHAR(60) NULL,
  `codigoPostal` VARCHAR(6) NULL,
  `usuarios_id` INT NOT NULL,
  PRIMARY KEY (`idinformacion_Contacto`),
  INDEX `fk_informacion_contacto_usuarios1_idx` (`usuarios_id` ASC) VISIBLE,
  CONSTRAINT `fk_informacion_contacto_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `crowdfunding_ec`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`multimedia_evidencia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`multimedia_evidencia` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`multimedia_evidencia` (
  `idmultimedia_evidencia` INT NOT NULL AUTO_INCREMENT,
  `titulo_evidencia` VARCHAR(45) NULL,
  `fecha_evidencia` DATE NULL,
  `contenido_evidencia` MEDIUMBLOB NULL,
  `fecha_subida` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `proyectos_id` INT NOT NULL,
  PRIMARY KEY (`idmultimedia_evidencia`),
  INDEX `fk_multimedia_evidencia_proyectos1_idx` (`proyectos_id` ASC) VISIBLE,
  CONSTRAINT `fk_multimedia_evidencia_proyectos1`
    FOREIGN KEY (`proyectos_id`)
    REFERENCES `crowdfunding_ec`.`proyectos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`soperte`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`soperte` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`soperte` (
  `idsoperte` INT NOT NULL AUTO_INCREMENT,
  `nivelAcceso` VARCHAR(45) NULL,
  `especialidad` VARCHAR(100) NULL,
  `turno` VARCHAR(45) NULL,
  `departamento` VARCHAR(45) NULL,
  `casos_atendidos` INT NULL,
  `fecha_creacion_sopor` DATETIME NULL,
  `usuarios_id` INT NOT NULL,
  PRIMARY KEY (`idsoperte`),
  INDEX `fk_soperte_usuarios1_idx` (`usuarios_id` ASC) VISIBLE,
  CONSTRAINT `fk_soperte_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `crowdfunding_ec`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crowdfunding_ec`.`ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `crowdfunding_ec`.`ticket` ;

CREATE TABLE IF NOT EXISTS `crowdfunding_ec`.`ticket` (
  `idticket` INT NOT NULL AUTO_INCREMENT,
  `descripcion` TEXT NOT NULL,
  `estado_ticket` ENUM('Abierto', 'Espera', 'Cerrado') NULL,
  `fecha_creacion_ticket` DATETIME NULL,
  `fecha_cierre_ticket` DATETIME NULL,
  `usuarios_id` INT NOT NULL,
  `soperte_idsoperte` INT NOT NULL,
  PRIMARY KEY (`idticket`, `usuarios_id`),
  INDEX `fk_ticket_usuarios1_idx` (`usuarios_id` ASC) VISIBLE,
  INDEX `fk_ticket_soperte1_idx` (`soperte_idsoperte` ASC) VISIBLE,
  CONSTRAINT `fk_ticket_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `crowdfunding_ec`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ticket_soperte1`
    FOREIGN KEY (`soperte_idsoperte`)
    REFERENCES `crowdfunding_ec`.`soperte` (`idsoperte`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `crowdfunding_ec`;

DELIMITER $$

USE `crowdfunding_ec`$$
DROP TRIGGER IF EXISTS `crowdfunding_ec`.`trg_after_verificacion_proyecto` $$
USE `crowdfunding_ec`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `crowdfunding_ec`.`trg_after_verificacion_proyecto`
AFTER UPDATE ON `crowdfunding_ec`.`verificaciones_proyectos`
FOR EACH ROW
BEGIN
    -- Declaraciones deben estar al inicio del bloque
    DECLARE total INT;
    DECLARE aprobadas INT;

    IF NEW.estado = 'Aprobada' THEN
        -- Contar todas las verificaciones del proyecto
        SELECT COUNT(*) INTO total
        FROM verificaciones_proyectos
        WHERE proyecto_id = NEW.proyecto_id;

        -- Contar las verificaciones aprobadas del proyecto
        SELECT COUNT(*) INTO aprobadas
        FROM verificaciones_proyectos
        WHERE proyecto_id = NEW.proyecto_id AND estado = 'Aprobada';

        -- Si todas las verificaciones est√°n aprobadas, marcar el proyecto como verificado
        IF total = aprobadas THEN
            UPDATE proyectos
            SET verificado = TRUE,
                fecha_verificacion = NOW()
            WHERE id = NEW.proyecto_id;
        END IF;
    END IF;
END$$


USE `crowdfunding_ec`$$
DROP TRIGGER IF EXISTS `crowdfunding_ec`.`trg_after_verificacion_usuario` $$
USE `crowdfunding_ec`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `crowdfunding_ec`.`trg_after_verificacion_usuario`
AFTER UPDATE ON `crowdfunding_ec`.`verificaciones_usuarios`
FOR EACH ROW
BEGIN
    -- Declaraciones deben estar al inicio del bloque
    DECLARE total INT;
    DECLARE aprobadas INT;

    IF NEW.estado = 'Aprobada' THEN
        -- Contar todas las verificaciones del usuario
        SELECT COUNT(*) INTO total
        FROM verificaciones_usuarios
        WHERE usuario_id = NEW.usuario_id;

        -- Contar las verificaciones aprobadas del usuario
        SELECT COUNT(*) INTO aprobadas
        FROM verificaciones_usuarios
        WHERE usuario_id = NEW.usuario_id AND estado = 'Aprobada';

        -- Si todas las verificaciones est√°n aprobadas, marcar al usuario como verificado
        IF total = aprobadas THEN
            UPDATE usuarios
            SET verificado = TRUE,
                fecha_verificacion = NOW()
            WHERE id = NEW.usuario_id;
        END IF;
    END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
